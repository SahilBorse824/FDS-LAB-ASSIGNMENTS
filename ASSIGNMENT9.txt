'''Q.1] A PALINDROOM IS STRING CHARACTER THAT'S THE SAME FORWARD AND BACKWARD. IMPLEMENT A C++ PROGRAM TO:
	(A) TO PRING ORIGINAL STRING FOLLOWED BY REVERSED STRING USING STACK.
	(B) TO CHECK WHETHER GIVEN STRING IS PALINDROME OR NOT.'''



# PROGRAM>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


#include<iostream>
#include<string.h>
#include<ctype.h>
using namespace std;
#define MAX 50
 
class Stack
{
private:
  char data[MAX],str[MAX];
  int top,length,count;
 
  void pushData(char);
  char popData();
 
public:
  Stack()
  {
    top=-1;
    length=0;
    count=0;
  }
  void getString();
  void checkPalindrome();
  void extractString();
  void displayReverse();
};
 
void Stack::getString()
{
  cout<<"\nEnter a String : ";
  cin.getline(str,MAX);
  length=strlen(str);
}
 
void Stack::extractString()
{
  char temp[MAX];
  int i,j;
  for(i=0; i<length; i++)
  {
    temp[i]=str[i];
  }
  j=0;
for(i=0; i<length; i++ )
  {
    if(isalpha(temp[i]))
    {
      str[j]=tolower(temp[i]);
      j++;
    }
  }
  length=j;   //update length with new str length
}
 
void Stack::checkPalindrome()
{
  for(int i=0; i<length; i++)
    pushData(str[i]);
 
  for(int i=0; i<length; i++)
  {
    if(str[i]==popData())
      count++;
  }
  if(count==length) {
    cout<<"\nEntered string is a Palindrome. \n";
  }
  else
    cout<<"\nEntered string is not a Palindrome. \n";
}
 
void Stack::displayReverse()
{
  for(int i=length-1; i>=0; i--)
    cout<<str[i];
}
 
void Stack::pushData(char temp)
{
 
  if(top==MAX-1)
  {
    cout<<"\n Stack Overflow!!!";
    return;
  }
  top++;
  data[top]=temp;
}
 
char Stack::popData()
{
  if(top==-1)
  {
    cout<<"\n Stack Underflow!!!";
    char ch='\n';
    return ch;
  }
  char temp=data[top];
  top--;
  return temp;
}
 
int main()
{
  Stack obj;
  obj.getString();
  obj.extractString();
 
  cout<<"\nReverse of entered string : ";
 
  obj.displayReverse();
  obj.checkPalindrome();
  return 0;
}
